{"version":3,"file":"static/js/984.e657bfa6.chunk.js","mappings":"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","sources":["components/api-address-form/ApiAddressForm.js","icons/GlyphAttention.js","components/is-not-connected/IsNotConnected.js","components/shell/Shell.js","components/tour/withTour.js","icons/GlyphTick.js","components/is-connected/IsConnected.js","components/about-ipfs/AboutIpfs.js","components/about-webui/AboutWebUI.js","welcome/WelcomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'redux-bundler-react'\nimport { withTranslation } from 'react-i18next'\nimport Button from '../button/Button.js'\nimport { checkValidAPIAddress } from '../../bundles/ipfs-provider.js'\n\nconst ApiAddressForm = ({ t, doUpdateIpfsApiAddress, ipfsApiAddress, ipfsInitFailed }) => {\n  const [value, setValue] = useState(asAPIString(ipfsApiAddress))\n  const initialIsValidApiAddress = !checkValidAPIAddress(value)\n  const [showFailState, setShowFailState] = useState(initialIsValidApiAddress || ipfsInitFailed)\n  const [isValidApiAddress, setIsValidApiAddress] = useState(initialIsValidApiAddress)\n\n  // Updates the border of the input to indicate validity\n  useEffect(() => {\n    setShowFailState(ipfsInitFailed)\n  }, [isValidApiAddress, ipfsInitFailed])\n\n  // Updates the border of the input to indicate validity\n  useEffect(() => {\n    const isValid = checkValidAPIAddress(value)\n    setIsValidApiAddress(isValid)\n    setShowFailState(!isValid)\n  }, [value])\n\n  const onChange = (event) => setValue(event.target.value)\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n    doUpdateIpfsApiAddress(value)\n  }\n\n  const onKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      onSubmit(event)\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        id='api-address'\n        aria-label={t('terms.apiAddress')}\n        placeholder={t('apiAddressForm.placeholder')}\n        type='text'\n        className={`w-100 lh-copy monospace f5 pl1 pv1 mb2 charcoal input-reset ba b--black-20 br1 ${showFailState ? 'focus-outline-red b--red-muted' : 'focus-outline-green b--green-muted'}`}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n        value={value}\n      />\n      <div className='tr'>\n        <Button\n          minWidth={100}\n          height={40}\n          className='mt2 mt0-l ml2-l tc'\n          disabled={!isValidApiAddress || value === ipfsApiAddress}>\n          {t('actions.submit')}\n        </Button>\n      </div>\n    </form>\n  )\n}\n\n/**\n * @returns {string}\n */\nconst asAPIString = (value) => {\n  if (value == null) return ''\n  if (typeof value === 'string') return value\n  return JSON.stringify(value)\n}\n\nexport default connect(\n  'doUpdateIpfsApiAddress',\n  'selectIpfsApiAddress',\n  'selectIpfsInitFailed',\n  withTranslation('app')(ApiAddressForm)\n)\n","import * as React from 'react'\n\nfunction SvgGlyphAttention (props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" {...props}>\n      <path d=\"M82.84 71.14L55.06 23a5.84 5.84 0 00-10.12 0L17.16 71.14a5.85 5.85 0 005.06 8.77h55.56a5.85 5.85 0 005.06-8.77zm-30.1-.66h-5.48V65h5.48zm0-10.26h-5.48V38.46h5.48z\" />\n    </svg>\n  )\n}\n\nexport default SvgGlyphAttention\n","import React, { useState } from 'react'\nimport { connect } from 'redux-bundler-react'\nimport { withTranslation, Trans } from 'react-i18next'\nimport classNames from 'classnames'\nimport ApiAddressForm from '../api-address-form/ApiAddressForm.js'\nimport Box from '../box/Box.js'\nimport Shell from '../shell/Shell.js'\nimport GlyphAttention from '../../icons/GlyphAttention.js'\n\nconst TABS = {\n  UNIX: 'unix',\n  POWERSHELL: 'windowsPS',\n  WINDOWS: 'windowsCMD'\n}\n\nconst IsNotConnected = ({ t, apiUrl, connected, sameOrigin, ipfsApiAddress, doUpdateIpfsApiAddress }) => {\n  const [activeTab, setActiveTab] = useState(TABS.UNIX)\n  const defaultDomains = ['http://localhost:3000', 'http://127.0.0.1:5001', 'https://webui.ipfs.io']\n  const origin = window.location.origin\n  const addOrigin = defaultDomains.indexOf(origin) === -1\n  return (\n    <Box className='pv3 ph4 lh-copy charcoal'>\n      <div className='flex flex-wrap items-center'>\n        <GlyphAttention style={{ height: 76 }} className='fill-red mr' role='presentation' />\n        <h1 className='montserrat fw4 charcoal ma0 f3 red'>{t('app:status.couldNotConnect')}</h1>\n      </div>\n      <Trans i18nKey='notConnected.paragraph1' t={t}>\n        <p className='fw6 mb3'>Check out the installation guide in the <a className='link blue' href='https://docs.ipfs.tech/install/command-line-quick-start/' target='_blank' rel='noopener noreferrer'>IPFS Docs</a>, or try these common fixes:</p>\n      </Trans>\n      <ol className='pl3 pt2'>\n        <Trans i18nKey='notConnected.paragraph2' t={t}>\n          <li className='mb3'>Is your IPFS daemon running? Try starting or restarting it from your terminal:</li>\n        </Trans>\n        <Shell title='Any Shell'>\n          <code className='db'><b className='no-select'>$ </b>ipfs daemon</code>\n          <code className='db'>Initializing daemon...</code>\n          <code className='db'>API server listening on /ip4/127.0.0.1/tcp/5001</code>\n        </Shell>\n        { !sameOrigin && (\n          <div>\n            <Trans i18nKey='notConnected.paragraph3' t={t}>\n              <li className='mb3 mt4'>Is your IPFS API configured to allow <a className='link blue' href='https://github.com/ipfs/ipfs-webui#configure-kubo-rpc-api-cors-headers'>cross-origin (CORS) requests</a>? If not, run these commands and then start your daemon from the terminal:</li>\n            </Trans>\n            <div className='br1 overflow-hidden'>\n              <div className='f7 mb0 sans-serif charcoal pv1 pl2 bg-black-20 flex items-center overflow-x-auto'>\n                <button onClick={() => setActiveTab(TABS.UNIX)} className={classNames('pointer mr3 ttu tracked', activeTab === TABS.UNIX && 'fw7')}>\n                Unix & MacOS\n                </button>\n                <button onClick={() => setActiveTab(TABS.POWERSHELL)} className={classNames('pointer mr3 ttu tracked', activeTab === TABS.POWERSHELL && 'fw7')}>\n                  Windows Powershell\n                </button>\n                <button onClick={() => setActiveTab(TABS.WINDOWS)} className={classNames('pointer ttu tracked', activeTab === TABS.WINDOWS && 'fw7')}>\n                  Windows CMD\n                </button>\n              </div>\n              <div className='bg-black-70 snow pa2 f7 lh-copy monospace nowrap overflow-x-auto'>\n                { activeTab === TABS.UNIX && (\n                  <div>\n                    <code className='db'><b className='no-select'>$ </b>ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[{addOrigin && `\"${origin}\", `}\"{defaultDomains.join('\", \"')}\"]'</code>\n                    <code className='db'><b className='no-select'>$ </b>ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"PUT\", \"POST\"]'</code>\n                  </div>\n                )}\n                { activeTab === TABS.POWERSHELL && (\n                  <div>\n                    <code className='db'><b className='no-select'>$ </b>ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[{addOrigin && `\\\\\"${origin}\\\\\", `}\\\"{defaultDomains.join('\\\\\", \\\\\"')}\\\"]'</code>\n                    <code className='db'><b className='no-select'>$ </b>ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\\\"PUT\\\", \\\"POST\\\"]'</code>\n                  </div>\n                )}\n                { activeTab === TABS.WINDOWS && (\n                  <div>\n                    <code className='db'><b className='no-select'>$ </b>ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin \"[{addOrigin && `\"\"\"${origin}\"\"\", `}\"\"\"{defaultDomains.join('\"\"\", \"\"\"')}\"\"\"]\"</code>\n                    <code className='db'><b className='no-select'>$ </b>ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods \"[\"\"\"PUT\"\"\", \"\"\"POST\"\"\"]\"</code>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n        <Trans i18nKey='notConnected.paragraph4' t={t}>\n          <li className='mt4 mb3'>Is your IPFS API on a port other than 5001? If your node is configured with a <a className='link blue' href='https://github.com/ipfs/kubo/blob/master/docs/config.md#addresses' target='_blank' rel='noopener noreferrer'>custom API address</a>, enter it here.</li>\n        </Trans>\n        <ApiAddressForm\n          t={t}\n          defaultValue={ipfsApiAddress || ''}\n          updateAddress={doUpdateIpfsApiAddress} />\n      </ol>\n    </Box>\n  )\n}\n\nexport default connect(\n  'selectIpfsConnected',\n  'selectApiUrl',\n  withTranslation('welcome')(IsNotConnected)\n)\n","import React from 'react'\nimport classNames from 'classnames'\n\nconst Shell = ({\n  title = 'Shell',\n  children,\n  className\n}) => {\n  return (\n    <div className={classNames('br1 overflow-hidden', className)}>\n      <div className='f7 mb0 sans-serif ttu tracked charcoal pv1 pl2 bg-black-20'>{ title }</div>\n      <div className='bg-black-70 snow pa2 f7 lh-copy monospace nowrap overflow-x-auto'>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Shell\n","import React from 'react'\nimport { connect } from 'redux-bundler-react'\nimport { STATUS } from 'react-joyride'\n\nconst withTour = WrappedComponent => {\n  class WithTour extends React.Component {\n    handleJoyrideCallback = (data) => {\n      const { doDisableTours } = this.props\n      const { action, status } = data\n\n      if (action === 'close' || [STATUS.FINISHED].includes(status)) {\n        doDisableTours()\n      }\n    }\n\n    render () {\n      return <WrappedComponent handleJoyrideCallback={this.handleJoyrideCallback} {...this.props} />\n    }\n  }\n\n  return connect('doDisableTours', WithTour)\n}\n\nexport default withTour\n","import * as React from 'react'\n\nfunction SvgGlyphTick (props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" {...props}>\n      <path d=\"M50 20.11A29.89 29.89 0 1079.89 50 29.89 29.89 0 0050 20.11zM44.18 63.6L32.53 52l3.92-4 7.73 7.73L63.55 36.4l3.92 3.92z\" />\n    </svg>\n  )\n}\n\nexport default SvgGlyphTick\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport Box from '../box/Box.js'\nimport GlyphTick from '../../icons/GlyphTick.js'\n\nexport const IsConnected = ({ t }) => {\n  return (\n    <Box className='pv3 ph4'>\n      <div>\n        <div className='flex flex-wrap items-center'>\n          <GlyphTick style={{ height: 76 }} className='fill-green' role='presentation' />\n          <h1 className='montserrat fw4 charcoal ma0 f3 green'>{t('app:status.connectedToIpfs')}</h1>\n        </div>\n        <p className='fw6 mt1 ml3-ns w-100'>{t('connected.paragraph1')}</p>\n      </div>\n    </Box>\n  )\n}\n\nexport default withTranslation('welcome')(IsConnected)\n","import React from 'react'\nimport { withTranslation, Trans } from 'react-i18next'\nimport Box from '../box/Box.js'\n\nexport const AboutIpfs = ({ t }) => {\n  return (\n    <Box>\n      <h2 className='mt0 mb3 montserrat fw2 f3 charcoal'>{t('aboutIpfs.header')}</h2>\n      <ul className='pl3'>\n        <Trans i18nKey='aboutIpfs.paragraph1' t={t}>\n          <li className='mb2'><strong>A hypermedia distribution protocol</strong> that incorporates ideas from Kademlia, BitTorrent, Git, and more</li>\n        </Trans>\n        <Trans i18nKey='aboutIpfs.paragraph2' t={t}>\n          <li className='mb2'><strong>A peer-to-peer file transfer network</strong> with a completely decentralized architecture and no central point of failure, censorship, or control</li>\n        </Trans>\n        <Trans i18nKey='aboutIpfs.paragraph3' t={t}>\n          <li className='mb2'><strong>An on-ramp to tomorrow's web</strong> &mdash; traditional browsers can access IPFS files through gateways like <code className='f5 bg-light-gray br2 pa1'>https://dweb.link</code> or directly using the <a className='link blue' target='_blank' rel='noopener noreferrer' href='https://github.com/ipfs/ipfs-companion#readme'>IFPS Companion</a> extension</li>\n        </Trans>\n        <Trans i18nKey='aboutIpfs.paragraph4' t={t}>\n          <li className='mb2'><strong>A next-gen CDN</strong> &mdash; just add a file to your node to make it available to the world with cache-friendly content-hash addressing and BitTorrent-style bandwidth distribution</li>\n        </Trans>\n        <Trans i18nKey='aboutIpfs.paragraph5' t={t}>\n          <li className='mb2'><strong>A developer toolset</strong> for building completely <a className='link blue' target='_blank' rel='noopener noreferrer' href='https://awesome.ipfs.tech/'>distributed apps and services</a>, backed by a robust open-source community</li>\n        </Trans>\n      </ul>\n    </Box>\n  )\n}\n\nexport default withTranslation('welcome')(AboutIpfs)\n","import React from 'react'\nimport { withTranslation, Trans } from 'react-i18next'\nimport Box from '../box/Box.js'\n\nexport const AboutWebUI = ({ t }) => {\n  return (\n    <Box>\n      <h2 className='mt0 mb3 montserrat fw2 f3 charcoal'>{t('welcomeInfo.header')}</h2>\n      <ul className='pl3'>\n        <Trans i18nKey='welcomeInfo.paragraph1' t={t}>\n          <li className='mb2'><a href='#/' className='link blue u b'>Check your node status</a>, including how many peers you're connected to, your storage and bandwidth stats, and more</li>\n        </Trans>\n        <Trans i18nKey='welcomeInfo.paragraph2' t={t}>\n          <li className='mb2'><a href='#/files' className='link blue u b'>View and manage files</a> in your IPFS repo, including drag-and-drop file import, easy pinning, and quick sharing and download options</li>\n        </Trans>\n        <Trans i18nKey='welcomeInfo.paragraph3' t={t}>\n          <li className='mb2'><a href='#/explore' className='link blue b'>Visit the \"Merkle Forest\"</a> with some sample datasets and explore IPLD, the data model that underpins how IPFS works</li>\n        </Trans>\n        <Trans i18nKey='welcomeInfo.paragraph4' t={t}>\n          <li className='mb2'><a href='#/peers' className='link blue b'>See who's connected to your node</a>, geolocated on a world map by their IP address</li>\n        </Trans>\n        <Trans i18nKey='welcomeInfo.paragraph5' t={t}>\n          <li className='mb2'><a href='#/settings' className='link blue b'>Review or edit your node settings</a> &mdash; no command line required</li>\n        </Trans>\n        <Trans i18nKey='welcomeInfo.paragraph6' t={t}>\n          <li className='f5'><a href='https://github.com/ipfs-shipyard/ipfs-webui' className='link blue b' target='_blank' rel='noopener noreferrer'>Check this app's source code</a> to <a href='https://github.com/ipfs-shipyard/ipfs-webui/issues' className='link blue' target='_blank' rel='noopener noreferrer'>report a bug</a> or make a contribution, and make IPFS better for everyone!</li>\n        </Trans>\n      </ul>\n    </Box>\n  )\n}\n\nexport default withTranslation('welcome')(AboutWebUI)\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { connect } from 'redux-bundler-react'\nimport { withTranslation } from 'react-i18next'\nimport ReactJoyride from 'react-joyride'\nimport withTour from '../components/tour/withTour.js'\nimport { welcomeTour } from '../lib/tours.js'\nimport { getJoyrideLocales } from '../helpers/i8n.js'\n\n// Components\nimport IsConnected from '../components/is-connected/IsConnected.js'\nimport IsNotConnected from '../components/is-not-connected/IsNotConnected.js'\nimport AboutIpfs from '../components/about-ipfs/AboutIpfs.js'\nimport AboutWebUI from '../components/about-webui/AboutWebUI.js'\nimport ComponentLoader from '../loader/ComponentLoader.js'\n\nconst WelcomePage = ({ t, apiUrl, ipfsInitFailed, ipfsConnected, ipfsReady, toursEnabled, handleJoyrideCallback }) => {\n  if (!ipfsInitFailed && !ipfsReady) {\n    return <ComponentLoader />\n  }\n\n  const isSameOrigin = window.location.origin === apiUrl\n\n  return (\n    <div>\n      <Helmet>\n        <title>{t('title')}</title>\n      </Helmet>\n      <div className='lh-copy charcoal'>\n        <ConnectionStatus connected={ipfsConnected} sameOrigin={isSameOrigin} t={t} />\n      </div>\n      <ReactJoyride\n        run={toursEnabled}\n        steps={welcomeTour.getSteps({ t })}\n        styles={welcomeTour.styles}\n        callback={handleJoyrideCallback}\n        scrollToFirstStep\n        locale={getJoyrideLocales(t)} />\n    </div>\n  )\n}\n\nconst ConnectionStatus = ({ t, connected, sameOrigin }) => {\n  if (connected) {\n    return (\n      <div>\n        <IsConnected />\n        <div className='flex-ns mt3'>\n          <div className='mr3-ns lh-copy mid-gray w-50-ns'>\n            <AboutWebUI />\n          </div>\n          <div className='lh-copy mid-gray w-50-ns mt3 mt0-ns'>\n            <AboutIpfs />\n          </div>\n        </div>\n      </div>\n    )\n  }\n  return (\n    <IsNotConnected />\n  )\n}\n\nexport default connect(\n  'selectIpfsInitFailed',\n  'selectIpfsConnected',\n  'selectIpfsReady',\n  'selectApiUrl',\n  'selectToursEnabled',\n  withTour(withTranslation('welcome')(WelcomePage))\n)\n"],"names":["asAPIString","value","JSON","stringify","connect","withTranslation","_ref","t","doUpdateIpfsApiAddress","ipfsApiAddress","ipfsInitFailed","setValue","useState","initialIsValidApiAddress","checkValidAPIAddress","showFailState","setShowFailState","isValidApiAddress","setIsValidApiAddress","useEffect","isValid","onSubmit","async","event","preventDefault","React","id","placeholder","type","className","concat","onChange","target","onKeyPress","key","Button","minWidth","height","disabled","props","_extends","xmlns","viewBox","d","TABS","apiUrl","connected","sameOrigin","activeTab","setActiveTab","defaultDomains","origin","window","location","addOrigin","indexOf","Box","GlyphAttention","style","role","Trans","i18nKey","href","rel","Shell","title","onClick","classNames","join","ApiAddressForm","defaultValue","updateAddress","children","WrappedComponent","WithTour","constructor","arguments","_defineProperty","data","doDisableTours","this","action","status","STATUS","FINISHED","includes","render","handleJoyrideCallback","GlyphTick","ConnectionStatus","_ref2","IsConnected","AboutWebUI","AboutIpfs","IsNotConnected","withTour","ipfsConnected","ipfsReady","toursEnabled","ComponentLoader","isSameOrigin","Helmet","ReactJoyride","run","steps","welcomeTour","getSteps","styles","callback","scrollToFirstStep","locale","getJoyrideLocales"],"sourceRoot":""}